@model Service_Library.Models.Book

@{
    ViewBag.Title = "Edit Book";
}

<h2>Edit Book</h2>
<form method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
    <input type="hidden" name="BookId" value="@Model.BookId" />
    @if (!ViewData.ModelState.IsValid)
    {
        <div class="alert alert-danger">
            <ul>
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }
    <div class="form-group">
        <label for="Title">Title</label>
        <input type="text" class="form-control" id="Title" asp-for="Title" required />
    </div>
    <div class="form-group">
        <label for="Author">Author</label>
        <input type="text" class="form-control" id="Author" asp-for="Author" required />
    </div>
    <div class="form-group">
        <label for="Publisher">Publisher</label>
        <input type="text" class="form-control" id="Publisher" asp-for="Publisher" required />
    </div>
    <div class="form-group">
        <label for="YearOfPublishing">Year of Publishing</label>
        <input type="number" class="form-control" id="YearOfPublishing" asp-for="YearOfPublishing" min="0" required />
    </div>
    <div class="form-group">
        <label for="Format">File Format</label>
        <select class="form-control" id="Format" asp-for="Format" required>
            <option value="">-- Select Format --</option>
            <option value="PDF">PDF</option>
            <option value="EPUB">EPUB</option>
            <option value="MOBI">MOBI</option>
            <option value="FB2">FB2</option>
        </select>
    </div>
    <div class="form-group">
        <label for="AgeLimit">Age Limit</label>
        <input type="number" class="form-control" id="AgeLimit" asp-for="AgeLimit" min="0" value="0" />
    </div>
    <div class="form-group">
        <label for="BorrowPrice">Borrow Price</label>
        <input type="number" class="form-control" id="BorrowPrice" asp-for="BorrowPrice" step="0.01" min="0" required />
    </div>
    <div class="form-group">
        <label for="BuyPrice">Buy Price</label>
        <input type="number" class="form-control" id="BuyPrice" asp-for="BuyPrice" step="0.01" min="0" required />
    </div>
    <div class="form-group">
        <label for="DiscountPrice">Discount Price</label>
        <input type="number" class="form-control" id="DiscountPrice" asp-for="DiscountPrice" step="0.01" min="0" />
    </div>
    <div class="form-group">
        <label for="DiscountEndDate">Discount End Date</label>
        <input type="date" class="form-control" id="DiscountEndDate" asp-for="DiscountEndDate" />
    </div>
    <div class="form-group">
        <label for="AvailableCopies">Available Copies</label>
        <input type="number" class="form-control" id="AvailableCopies" asp-for="AvailableCopies" min="0" required />
    </div>
    <div class="form-group">
        <label for="Category">Category</label>
        <select class="form-control" asp-for="Category" asp-items="@(new SelectList(ViewBag.Categories, Model.Category))">
            <option value="">-- Select Category --</option>
        </select>
    </div>
    <div class="form-group">
        <label for="IsBorrowable">Is Borrowable?</label>
        <select class="form-control" id="IsBorrowable" asp-for="IsBorrowable" required>
            <option value="true">Yes</option>
            <option value="false">No</option>
        </select>
    </div>
    <div class="form-group">
        <label for="CoverImage">Cover Image</label>
        <input type="file" class="form-control-file" id="CoverImage" name="CoverImage" accept="image/*" />
    </div>
    <div class="form-group">
        <label for="BookContent">Book Content</label>
        <input type="file" class="form-control-file" id="BookContent" name="BookContent" accept=".pdf,.epub,.mobi,.fb2" onchange="validateFileFormat()" />
        @if (Model.BookContent != null)
        {
            <p>Current File: @Model.Title.@Model.Format.ToLower()</p>
        }
    </div>
    <!-- Current Cover Image Preview -->
    <div class="form-group">
        <label>Current Cover Image</label>
        <div>
            @if (Model.CoverImage != null)
            {
                <img id="currentCoverImage" src="data:image/png;base64,@(Convert.ToBase64String(Model.CoverImage))"
                     alt="Cover Image" class="img-thumbnail" style="width: 200px; height: auto;" />
            }
            else
            {
                <p>No image available.</p>
            }
        </div>
    </div>
    <!-- Upload New Cover Image -->
    <div class="form-group">
        <label for="CoverImage">Upload New Cover Image</label>
        <input type="file" class="form-control-file" id="CoverImage" name="CoverImage" accept="image/*" onchange="previewImage(event)" />
    </div>
    <!-- New Cover Image Preview -->
    <div class="form-group">
        <label>Preview New Cover Image</label>
        <img id="newCoverPreview" src="#" alt="New Cover Preview" class="img-thumbnail" style="display: none; width: 200px; height: auto;" />
    </div>
    <button type="submit" class="btn btn-primary">Save Changes</button>
</form>

<!-- JavaScript to Preview New Image and Validate File Format -->
<script>
    function previewImage(event) {
        const file = event.target.files[0];
        const reader = new FileReader();

        reader.onload = function (e) {
            const preview = document.getElementById('newCoverPreview');
            preview.src = e.target.result;
            preview.style.display = 'block';
        };

        if (file) {
            reader.readAsDataURL(file);
        }
    }

    function validateFileFormat() {
        const fileInput = document.getElementById('BookContent');
        const file = fileInput.files[0];
        const allowedFormats = ['pdf', 'epub', 'mobi', 'fb2'];

        if (file) {
            const fileExtension = file.name.split('.').pop().toLowerCase();
            if (!allowedFormats.includes(fileExtension)) {
                alert(`Invalid file format (${fileExtension}). Please upload a file in one of the following formats: ${allowedFormats.join(', ')}.`);
                fileInput.value = ''; // Clear the file input
            }
        }
    }

    function validateForm() {
        var borrowPrice = parseFloat(document.getElementById("BorrowPrice").value);
        var buyPrice = parseFloat(document.getElementById("BuyPrice").value);
        var discountPrice = parseFloat(document.getElementById("DiscountPrice").value);
        var discountEndDate = new Date(document.getElementById("DiscountEndDate").value);
        var maxDiscountEndDate = new Date();
        maxDiscountEndDate.setDate(maxDiscountEndDate.getDate() + 7);

        if (buyPrice <= borrowPrice) {
            alert("Buy price must be higher than borrow price.");
            return false;
        }

        if (discountPrice >= buyPrice) {
            alert("Discount price must be lower than buy price.");
            return false;
        }

        if (discountEndDate > maxDiscountEndDate) {
            alert("Discount end date cannot be more than one week from today.");
            return false;
        }

        return true;
    }
</script>

